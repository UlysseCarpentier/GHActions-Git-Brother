name: Slack Setup
#author: Ulysse Carpentier <ulysse.carpentier@ext-energy-pool.eu>
#description: |+
#  Slack notification setup.
#  Specify the jobs status and titles you want to merge.
#  You can also get the slack id of the user who triggered the workflow.
on:
  workflow_call:
    inputs:
      jobs_status:
        description: Job Status you want to merge
        required: false
        type: string
      jobs_titles:
        description: Job Titles you wan to merge
        required: false
        type: string
    outputs:
      status:
        description: Jobs status
        value: ${{ jobs.get_status.outputs.status }}
      titles:
        description: Titles of the jobs
        value: ${{ jobs.get_titles.outputs.titles }}
      slack_id:
        description: Slack ID
        value: ${{ jobs.get_slack_id.outputs.bio }}
      get_slack_id_status:
        description: Status of the get slack id job
        value: ${{ jobs.get_slack_id.outputs.status }}
jobs:
  get_status:
    name: Get Merged Status
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.get_status.outputs.status }}
    steps:
      - name: Get status
        id: get_status
        run: |
          if ${{ contains(inputs.jobs_status, 'failure') }}; then
            echo "status=failure" >> $GITHUB_OUTPUT
          elif ${{ contains(inputs.jobs_status, 'cancelled') }}; then
            echo "status=cancelled" >> $GITHUB_OUTPUT
          elif ${{ contains(inputs.jobs_status, 'warning') }}; then
            echo "status=warning" >> $GITHUB_OUTPUT
          else
            echo "status=success" >> $GITHUB_OUTPUT
          fi

  get_titles:
    name: Get Merged titles
    runs-on: ubuntu-latest
    outputs:
      titles: ${{ steps.get_titles.outputs.title }}
    steps:
      - name: Get titles
        id: get_titles
        run: |
          if ${{ inputs.jobs_titles == '[]' }}; then
            echo 'title=Github Action Run' >> $GITHUB_OUTPUT
          else
            titles_string=$(echo '${{ inputs.jobs_titles }}' | jq -r 'join(", ")')
            echo "title=$titles_string" >> $GITHUB_OUTPUT
          fi

  get_slack_id:
    name: Get GitHub Bio
    runs-on: ubuntu-latest
    outputs:
      bio: ${{ steps.get_slack_id.outputs.bio }}
      status: ${{ job.status }}
    steps:
      - name: Get user github bio
        id: get_github_bio
        uses: actions/github-script@v7
        with:
          script: |
            const bio = await github.rest.users.getByUsername({
                  username: context.actor
              }).then((response) => {
                  console.log(response.data.bio)
                  return response.data.bio
              })
            return bio
      - name: Get Slack ID from bio
        id: get_slack_id
        run: |
          slack_id=$(echo "${{steps.get_github_bio.outputs.result}}" | grep -oE 'U[0-9A-Z]+')
          echo "bio=$slack_id" >> $GITHUB_OUTPUT
      - name: Echo Slack ID
        run: |
          echo "${{steps.get_slack_id.outputs.bio}}"
