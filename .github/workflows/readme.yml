# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  readme:
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: bitflight-devops/github-action-readme-generator@v1.7.1
        with:
          # Description: The absolute or relative path to the `action.yml` file to read in
          # from.
          #
          # Default: action.yml
          action: ''
      
          # Description: The absolute or relative path to the markdown output file that
          # contains the formatting tokens within it.
          #
          # Default: README.md
          readme: ''
      
          # Description: The GitHub Action repository owner. example `bitflight-devops` or
          # `your-gh-username`
          #
          owner: 'UlysseCarpentier'
      
          # Description: The GitHub Action repository name. example -
          # `github-action-readme-generator`
          #
          repo: ''
      
          # Description: Save the provided values in a `.ghadocs.json` file. This will
          # update any existing `.ghadocs.json` file that is in place.
          #
          save: ''
      
          # Description: Use `prettier` to pretty print the new README.md file
          #
          pretty: 'true'
      
          # Description: Enable the update of the usage version to match the latest version
          # in the `package.json` file
          #
          versioning_enabled: ''
      
          # Description: Set a specific version to display in the README.md
          #
          version_override: ''
      
          # Description: Prefix the version with this value, if it isn't already prefixed
          #
          # Default: v
          version_prefix: ''
      
          # Description: If versioning is disabled show this branch instead
          #
          # Default: main
          versioning_default_branch: ''
      
          # Description: Add a prefix to the README title. The title template looks like
          # this:
          #
          # # {brand}{prefix}{title}
          #
          # Default: GitHub Action:
          title_prefix: ''
      
          # Description: Include additional badge showing latest tag
          #
          # Default: true
          include_github_version_badge: ''
      
          # Description: Create the branding svg image from the branding object in
          # `action.yml` then save it to this path. Then update the `README.md` file to
          # source the branding image from this path. You can use a section template like
          # this: `\<!-- start branding --><!-- stop branding -->` or use the action input:
          # `branding_as_title_prefix: true` to prefix the 'title' section with the image.
          # The title template looks like this:
          #
          # # {brand}{prefix}{title}
          #
          # Default: .github/ghadocs/branding.svg
          branding_svg_path: ''
      
          # Description: Prefix the title in the `\<!-- start title -->` section with the
          # svg branding image The title template looks like this:
          #
          # # {brand}{prefix}{title}
          #
          # Default: true
          branding_as_title_prefix: ''
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
