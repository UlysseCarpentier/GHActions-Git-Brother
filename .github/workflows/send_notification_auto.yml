name: Send Slack Notification
on:
  create:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  check_branch-name:
    name: check_branch
    runs-on: ubuntu-latest

    #Important
    continue-on-error: true
    #Important
    outputs:
      status: ${{ job.status }}

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - run: echo "🍏 This branch name is ${{ steps.extract_branch.outputs.branch }}."
      - name: Check branch name
        id: check-branch_name
        run: |
          if echo "${{ steps.extract_branch.outputs.branch }}" | grep -Po '^(chore|feat|fix|hotfix)/[a-zA-Z0-9-]+/(RM|GH)-\d{6}_[a-zA-Z0-9-]+$'; then
              echo "match=true" >> $GITHUB_OUTPUT
          fi
      - name: Exit Status Update
        id: status_update
        #continue-on-error: true
        if: steps.check-branch_name.outputs.match != 'true'
        run: |
          exit 1
      - name: Exit Status Update1
        id: status_update1
        #continue-on-error: true
        run: |
          exit 0
          
  #Important
  slack_setup:
    runs-on: ubuntu-latest
    needs: check_branch-name
    if: always()
    outputs:
      status: ${{steps.set_status.outputs.status}}
    steps:
      - name: Set status
        id: set_status
        shell: bash
        #Réfléchir à comment intégrer les autres status: skipped, warning, cancelled
        run: |
          if ${{ contains(needs.*.outputs.status, 'failure') }}; then 
            echo "status=failure" >> $GITHUB_OUTPUT
          else
            echo "status=success" >> $GITHUB_OUTPUT
          fi
      #- name: Get Slack ID
      #  run: |

  #Important
  slack_notification:
    if: always()
    needs: slack_setup
    uses: UlysseCarpentier/GHActions-Git-Brother/.github/workflows/slack_notification.yml@main
    with:
      status: "${{ needs.slack_setup.outputs.status }}"
    secrets: inherit






        

