name: Send Slack Notification
description: |+
  Send Slack Notification.
  To use when you want to send a notification after all the jobs are completed.
  It will send a notification with the calculated status of the workflow.
  If you want to send a notification after each job, use the V_Slack_Notification.yml file.

on:
  workflow_dispatch:

jobs:
  first_job:
    name: first_job
    runs-on: ubuntu-latest
    #Important
    outputs:
      status: ${{ job.status }}
      title: ${{ steps.status_update1.outputs.title }}
    steps:
      - name: Exit Status Update1
        id: status_update1
        #User input
        run: |
          echo "title=First Title" >> $GITHUB_OUTPUT
          exit 0

  second_job:
    name: second-job
    runs-on: ubuntu-latest
    #Important
    outputs:
      status: ${{ job.status }}
      title: ${{ steps.status_update12.outputs.title }}
    steps:
      - name: Exit Status Update
        id: status_update12
        #User input
        run: |
          echo "title=Second title" >> $GITHUB_OUTPUT
          exit 0


  #Important
  slack_setup:
    runs-on: ubuntu-latest
    #User Input
    needs: [first_job, second_job]
    if: always()
    outputs:
      status: ${{steps.set_status.outputs.status}}
      slack_id: ${{steps.get_github_bio.outputs.bio}}
      title: ${{steps.set_message.outputs.title}}
    steps:
      - name: Set status
        id: set_status
        #If there's at least one "failure" job, the overall status is "failure."
        #If all jobs are "success" or "skipped," the overall status is "success."
        #If there's at least one "cancelled" job, the overall status is "cancelled."
        #If there's at least one "warning" job and no "failure" jobs, the overall status is "warning."
        run: |
          if ${{ contains(needs.*.outputs.status, 'failure') }}; then
            echo "status=failure" >> $GITHUB_OUTPUT
          elif ${{ contains(needs.*.outputs.status, 'cancelled') }}; then
            echo "status=cancelled" >> $GITHUB_OUTPUT
          elif ${{ contains(needs.*.outputs.status, 'warning') }}; then
            echo "status=warning" >> $GITHUB_OUTPUT
          else
            echo "status=success" >> $GITHUB_OUTPUT
          fi
      - name: Set message
        id: set_message
        run: |
            if ${{ toJSON(needs.*.outputs.title) == '' }}; then
              echo 'title=Github Action Run' >> $GITHUB_OUTPUT
            else
              titles_string=$(echo '${{ toJSON(needs.*.outputs.title) }}' | jq -r 'join(", ")')
              echo "title=$titles_string" >> $GITHUB_OUTPUT
            fi
     #Optional
      - name: Get Slack ID
        get_slackID:
          uses: UlysseCarpentier/GHActions-Git-Brother/.github/workflows/R_Slack_GetID.yml@main


  slack_notification:
    if: always()
    needs: slack_setup
    uses: UlysseCarpentier/GHActions-Git-Brother/.github/workflows/slack_notification.yml@main
    with:
      status: "${{ needs.slack_setup.outputs.status }}"
      notification_title: "${{ needs.slack_setup.outputs.title }}"
      mention_users: "${{ needs.slack_setup.outputs.slack_id }}"
      #User input, optional
    secrets:
      #User input
      SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}







        

